type Time = int;
type Task = 
 record {
   amount: text;
   completionTimestamp: Time;
   createdAt: Time;
   deadlineTimestamp: Time;
   donationAddress: text;
   keyId: text;
   proofUrl: text;
   status: text;
   title: text;
   txHash: text;
   updatedAt: Time;
   userId: principal;
 };
type Result_1 = 
 variant {
   err: text;
   ok: bool;
 };
type Result = 
 variant {
   err: text;
   ok: Task;
 };
service : {
  add: (text, text, Time, text, text) -> ();
  complete: (text, text, text) -> (Result_1);
  forfeit: (text, text) -> (Result_1);
  getTask: (text) -> (Result) query;
  isAnonymous: () -> (bool);
  tasks: () -> (vec Task) query;
  whoami: () -> (principal);
}
